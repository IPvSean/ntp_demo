- hosts: all
  gather_facts: false
  tasks:
  - name: Gather some basic host information
    ansible.builtin.setup:

  - name: Collect the current NTP configuration
    ansible.utils.cli_parse:
      command: cat /etc/ntp.conf
      parser:
        name: ansible.netcommon.native
        template_path: "{{ playbook_dir }}/ntp_parser.yaml"
      set_fact: original_ntp_configuration

  - name: Compare the current and desired
    ansible.utils.fact_diff:
      before: "{{ ntp|ansible.utils.to_paths }}"
      after: "{{ original_ntp_configuration|ansible.utils.to_paths }}"
    register: ntp_difference
  
  - name: Correct NTP configuration
    when: ntp_difference.changed
    become: True
    block:
    - name: Push a corrected NTP conf file
      ansible.builtin.template:
        src: ntp.conf.j2
        dest: /etc/ntp.conf
        owner: root
        group: root
      vars:
        ntp_servers: "{{ ntp.servers }}"
    
    - name: Restart service ntpd
      ansible.builtin.service:
        name: ntpd
        state: restarted
    
    - name: Allow servers to syncronize (60s)
      ansible.builtin.pause: 
        seconds: 60
    
    - name: Collect the current NTP server statuses
      ansible.utils.cli_parse:
        command: ntpq -p
        parser:
          name: ansible.netcommon.native
          template_path: "{{ playbook_dir }}/ntp_parser.yaml"
        set_fact: current_ntp_status
    
    - name: Restore the original configuration if a server is failed (stratum 16)
      ansible.builtin.template:
        src: ntp.conf.j2
        dest: /etc/ntp.conf
        owner: root
        group: root
      vars:
        ntp_servers: "{{ original_ntp_configuration.servers }}"
      when: "{{ current_ntp_status.statuses|selectattr('failed', 'equalto', True) }}"

     
